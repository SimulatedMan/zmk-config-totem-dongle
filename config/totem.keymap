//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <behaviors/rgbled_widget.dtsi>
#include <locale/keys_sv.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos { compatible = "zmk,combos"; 
        combo_acc_grave {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp SV_GRAVE>;
            layers = <1>;
        };
        combo_acute {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp SV_ACUTE>;
            layers = <1>;
        };
        combo_nav_esc {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp ESCAPE>;
            layers = <2>;
            require-prior-idle-ms = <150>;
        };
    };

    behaviors {
        apostraphe_double_quotes: apostraphe_double_quotes {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SV_APOSTROPHE>, <&kp SV_DOUBLE_QUOTES>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <175>;
            quick-tap-ms = <175>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 37 36 35 34 33 32>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <175>;
            quick-tap-ms = <175>;
            tapping-term-ms = <280>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <37 36 35 0 1 11 2 3 4 12 13 14 23 24 25 32 33 34 20 21 22 22 10>;
        };
        
        magic_key: magic_key {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            bindings = <&none>;
            akt_ph { trigger-keys = <P>; max-prior-idle-ms = <300>; bindings = <&kp H>;};
            akt_ox { trigger-keys = <O>; max-prior-idle-ms = <300>; bindings = <&kp X>;};
            akt_sc { trigger-keys = <S>; max-prior-idle-ms = <300>; bindings = <&kp C>;};
            akt_tj { trigger-keys = <T>; max-prior-idle-ms = <300>; bindings = <&kp J>;};
            akt_dj { trigger-keys = <D>; max-prior-idle-ms = <300>; bindings = <&kp J>;};
            akt_kj { trigger-keys = <K>; max-prior-idle-ms = <300>; bindings = <&kp J>;};
            akt_gj { trigger-keys = <G>; max-prior-idle-ms = <300>; bindings = <&kp J>;};
        };

        hmr_magic: hmr_magic {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&magic_key>;
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <175>;
            quick-tap-ms = <175>;
            tapping-term-ms = <280>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <37 36 35 0 1 11 2 3 4 12 13 14 23 24 25 32 33 34 20 21 22 22 10>;
        };

        mult_caret: mult_caret {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SV_ASTERISK>, <&kp SV_CARET>;
        };


    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Y     ┃     C     ┃     L     ┃     M     ┃     K     ┃   ┃     Z     ┃     F     ┃     U     ┃     Ä     ┃     Ö     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     I     ┃     S     ┃     R     ┃     T     ┃     G     ┃   ┃     P     ┃     N     ┃     E     ┃     A     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃LEFT_SHIFT ┃     Q     ┃  V LWIN   ┃  W LCTRL  ┃  D LALT   ┃     J     ┃   ┃     B     ┃  H  RALT  ┃MAGIC RCTRL┃   Å RWIN  ┃     X     ┃RIGHT_SHIFT┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    TAB    ┃  MO_LEFT  ┃    SPC    ┃   ┃   BSPC    ┃  MO_RIGHT ┃    RET    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
                &kp Y  &kp C            &kp L                &kp M            &kp K        &kp Z          &kp F             &kp U                        &kp SV_A_UMLAUT            &kp SV_O_UMLAUT
                &kp I  &kp S            &kp R                &kp T            &kp G        &kp P          &kp N             &kp E                        &kp A                      &kp O
&kp LEFT_SHIFT  &kp Q  &hml LEFT_WIN V  &hml LEFT_CONTROL W  &hml LEFT_ALT D  &kp J        &kp B          &hmr RIGHT_ALT H  &hmr_magic RIGHT_CONTROL 0   &hmr RIGHT_WIN SV_A_RING   &kp X           &kp RIGHT_SHIFT
                                        &kp TAB              &mo 1            &kp SPACE    &kp BACKSPACE  &mo 2             &kp RET
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        left_thumb_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "Left";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃  ESCAPE   ┃     \     ┃    ' "    ┃     /     ┃     {     ┃   ┃     }     ┃     +     ┃    * ^    ┃     %     ┃    Del    ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     !     ┃     ?     ┃     ,     ┃     .     ┃     (     ┃   ┃     )     ┃     -     ┃     :     ┃     ;     ┃     =     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃LEFT_SHIFT ┃     ~     ┃  < LWIN   ┃  | LCTRL  ┃  > LALT   ┃     [     ┃   ┃     ]     ┃     _     ┃     &     ┃     @     ┃     #     ┃RIGHT_SHIFT┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
        &kp ESCAPE          &kp SV_BACKSLASH            &apostraphe_double_quotes  &kp SV_SLASH                  &kp SV_LEFT_BRACE        &kp SV_RIGHT_BRACE        &kp SV_PLUS             &mult_caret                &kp SV_PERCENT       &kp DELETE
        &kp SV_EXCLAMATION  &kp SV_QUESTION             &kp SV_COMMA               &kp SV_DOT                    &kp SV_LEFT_PARENTHESIS  &kp SV_RIGHT_PARENTHESIS  &kp SV_MINUS            &kp SV_COLON               &kp SV_SEMI          &kp SV_EQUAL
&trans  &kp SV_TILDE        &hml LEFT_WIN SV_LESS_THAN  &hml LEFT_CONTROL SV_PIPE  &hml LEFT_ALT SV_GREATER_THAN &kp SV_LEFT_BRACKET      &kp SV_RIGHT_BRACKET      &hmr RIGHT_ALT SV_UNDER &hmr RIGHT_CONTROL SV_AMPS &hmr RIGHT_WIN SV_AT &kp SV_HASH  &trans
                                                  &trans                     &trans                      &trans                  &trans                 &trans                &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        //  
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        right_thumb_layer {           
        // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "Right";

        // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
        //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
        //             ┃     *     ┃     7     ┃     8     ┃     9     ┃     +     ┃   ┃    HOME   ┃ PAGE_DOWN ┃  PAGE_UP  ┃    END    ┃   TRANS   ┃
        //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
        //             ┃     0     ┃     1     ┃     2     ┃     3     ┃     =     ┃   ┃   LEFT    ┃    DOWN   ┃    UP     ┃   RIGHT   ┃     .     ┃
        // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
        // ┃LEFT_SHIFT ┃     /     ┃  4 LWIN   ┃  5 LCTRL  ┃  6 LALT   ┃     -     ┃   ┃    INS    ┃  $ RCTRL  ┃  £ RALT   ┃  € RWIN   ┃   TRANS   ┃RIGHT_SHIFT┃
        // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
        //                                     ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃
        //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            bindings = <
        &kp KP_MULTIPLY &kp SV_N7            &kp SV_N8               &kp SV_N9            &kp KP_PLUS        &kp HOME  &kp PAGE_DOWN            &kp PAGE_UP                      &kp END                &trans
        &kp SV_N0       &kp SV_N1            &kp SV_N2               &kp SV_N3            &kp KP_EQUAL       &kp LEFT  &kp DOWN                 &kp UP_ARROW                     &kp RIGHT              &kp KP_DOT
&trans  &kp KP_DIVIDE   &hml LEFT_WIN SV_N4  &hml LEFT_CONTROL SV_N5 &hml LEFT_ALT SV_N6  &kp KP_SUBTRACT    &kp INS   &hmr RIGHT_ALT SV_DOLLAR &hmr RIGHT_CONTROL SV_POUND_SIGN &hmr RIGHT_WIN SV_EURO &trans     &trans
                                                 &trans                      &trans                  &trans             &trans    &trans                 &trans
            >;
        };

        both_thumbs_layes {
        // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "Both";

        // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
        //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
        //             ┃   TRANS   ┃     F7    ┃     F8    ┃     F9    ┃   TRANS   ┃   ┃  IND_BAT  ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃  OUT_BLE  ┃
        //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
        //             ┃    F10    ┃     F1    ┃     F2    ┃     F3    ┃   TRANS   ┃   ┃   TRANS   ┃    ESC    ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃
        // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
        // ┃LEFT_SHIFT ┃   TRANS   ┃  F4 LWIN  ┃  F5 LCTRL ┃  F6 LALT  ┃   TRANS   ┃   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃RIGHT_SHIFT┃
        // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
        //                                     ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃
        //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            bindings = <
        &trans   &kp F7            &kp F8                &kp F9            &trans    &ind_bat &trans      &trans                   &trans            &out OUT_BLE
        &kp F10  &kp F1            &kp F2                &kp F3            &trans    &trans   &kp ESCAPE  &trans                   &trans            &trans
&trans  &trans   &hml LEFT_GUI F4  &hml LEFT_CONTROL F5  &hml LEFT_ALT F6  &trans    &trans   &trans      &trans                   &trans            &trans        &trans
                                   &trans                &trans            &trans    &trans   &trans      &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        both_thumbs {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
